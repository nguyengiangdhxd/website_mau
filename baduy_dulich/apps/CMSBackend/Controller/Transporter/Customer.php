<?php
/**
 * Created by PhpStorm.
 * User: nobita
 * Date: 1/5/15
 * Time: 11:45 AM
 */

namespace CMSBackend\Controller\Transporter;


use Flywheel\Session\Session;

class Customer extends Base {
    /** @var \ShippingCustomer */
    public $customer;
    public function beforeExecute()
    {
        parent::beforeExecute(); // TODO: Change the autogenerated stub
        if (!($id = $this->get('id'))) {
            $id = $this->post('id');
        }

        if($id) {
            $this->customer = \ShippingCustomer::retrieveById($id);
        }
    }

    public function executeDefault()
    {
        if (!$this->isAllowed(PERMISSION_TRANSPORTER_VIEW_CUSTOMER)) {
            return $this->raise403(t('You did not have permission access this area!'));
        }

        $keyword = $this->get('keyword');
        $page = $this->get('page', 'INT', 1);
        if ($this->request()->isXmlHttpRequest()) {
            $ajax = new \AjaxResponse();
            $ajax->type = \AjaxResponse::ERROR;
            if (!$this->isAllowed(PERMISSION_TRANSPORTER_VIEW_CUSTOMER)) {
                $ajax->message = t('You did not have permission access this area!');
                return $this->renderText($ajax->toString());
            }

            $q = \ShippingCustomer::select();
            if ($keyword) {
                $q->where('`name` LIKE :keyword')
                    ->orWhere('`mobile` LIKE :mobile OR `other_mobile` LIKE :mobile OR `phone` LIKE :keyword')
                    ->setParameter(':keyword', "%{$keyword}%", \PDO::PARAM_STR);
            }

            $cq = clone $q;
            /** @var \ShippingCustomer[] $customers */
            $customers = $q->setMaxResults(30)
                ->setFirstResult(30*($page-1))
                ->execute();

            $total = $cq->count('id')->execute();

            $result = [];
            foreach($customers as $customer) {
                $t = $customer->toArray();
                $t['detail_link'] = $this->createUrl('transporter/customer/default', ['id' => $customer->getId()]);
                $t['edit_link'] = $this->createUrl('transporter/customer/form', ['id' => $customer->getId()]);
                if($customer->getProvince()) {
                    $t['province'] = $customer->getProvince()->getName();
                }
                if ($customer->getDistrict()) {
                    $t['district'] = $customer->getDistrict()->getName();
                }
                $result[] = $t;
            }

            $ajax->message = 'OK';
            $ajax->type = \AjaxResponse::SUCCESS;
            $ajax->customers = $result;
            $ajax->total_page = ceil($total/30);
            $ajax->current_page = $page;

            return $this->renderText($ajax->toString());
        }

        $this->document()->addJsVar('cus_list_url',$this->createUrl('transporter/customer/default'));
        $this->setView('Transporter/Customer/default');
        $this->view()->assign([
            'keyword' => $keyword,
            'page' => $page
        ]);
        return $this->renderComponent();
    }

    public function executeDetail()
    {
    }

    public function executeForm()
    {
        if (!$this->isAllowed(PERMISSION_TRANSPORTER_EDIT_CUSTOMER)) {
            return $this->raise403(t('You did not have permission!'));
        }

        if (!$this->customer) {
            $this->customer = new \ShippingCustomer();
        }

        $error = [];
        $message = Session::getInstance()->getFlash('customer_form');

        if ($this->request()->isPostRequest()) {
            $data = $this->post('customer', 'ARRAY', []);
            //check mobile
            if ($taken = \ShippingCustomer::checkAvailableMobiles([$data['mobile']], $this->customer)) {
                $error['mobile'] = t('This mobile number was taken by %other_guy%', ['%other_guy%' => $taken->getName()]);
            }

            if ($data['other_mobile']) {
                if ($taken = \ShippingCustomer::checkAvailableMobiles([$data['other_mobile']], $this->customer)) {
                    $error['other_mobile'] = t('This other mobile number was taken by %other_guy%', ['%other_guy%' => $taken->getName()]);
                }
            }

            $this->customer->hydrate($data);
            if (empty($error)) {
                if ($this->customer->save()) {
                    Session::getInstance()->setFlash('customer_form', t('Save successful!'));
                    $this->redirect($this->createUrl('transporter/customer/form', ['id' => $this->customer->getId()]));
                } else {
                    if (!$this->customer->isValid()) {
                        foreach($this->customer->getValidationFailures() as $failures) {
                            $error[$failures->getColumn(false)] = t($failures->getMessage());
                        }
                    }
                }
            }

        }

        $this->setView('Transporter/Customer/form');
        $this->view()->assign([
            'customer' => $this->customer,
            'error' => $error,
            'message' => $message
        ]);
        return $this->renderComponent();
    }
}